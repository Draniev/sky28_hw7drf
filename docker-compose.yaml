version: '3.8'

services:
  app:
    build:
      context: .
    command: ./manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      celery_worker:
        condition: service_started
      celery_beat:
        condition: service_started

  migrations:
    build:
      context: .
    command: ./manage.py migrate
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy

  celery_worker:
    build:
      context: .
    command: celery -A config worker --loglevel=info
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis

  celery_beat:
    build:
        context: .
    command: celery -A config beat --loglevel=info
    restart: always
    env_file:
      - .env.docker
    depends_on:
      - redis

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.postgres
    restart: always
#    ports:
#      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:latest"
    restart: always
#    ports:
#      - "6379:6379"
    environment:
      - REDIS_PORT=6379

volumes:
  postgres_data:
